* org-edna-graph
Visually displaying org-edna dependencies between org-mode tasks.

** The problem this package sets out to solve.
When trying to tackle large lists of related tasks, it is easy to feel overwhelmed and uncertain what to do next.

** Intended outcomes.
- A diagram makes it easier to see what relationships between tasks are missing.
- Knowing that nothing is being missed makes it easier to focus on today's work.
- A visual provides a quick method of seeing which tasks are more urgent.

** The role of this package.
Create a package that allows for dependencies between org-mode tasks, defined by org-edna, to be displayed in an image.

** Requirements:

*** Uses the [[https://savannah.nongnu.org/projects/org-edna-el/][org-edna]] package to define the dependencies.
Org-edna is a more capable version of org-depend for defining dependencies. There are useful helper packages like [[https://github.com/toshism/org-linker-edna][org-linker-edna]] for helping to streamline the creation of these dependencies.

*** Called using an interactive function.
The image would be updated whenever an interactive function was called.

*** Can draw on one or multiple files.
The source of the org-mode tasks could be either a single file, or multiple files. Multiple files could be those used by org-agenda for example.

*** Display the relationships using existing diagram creation tools.
This might be PlantUML or GraphViz for example.


** Existing resources.
*** [[https://github.com/lytex/org-graph-edna][lytex/org-graph-edna]]

This repository contains an Emacs lisp  function for creating a PlantUML file from existing org-edna dependencies.
**** Things that are missing.
***** There is no interactive defun within this package.
It requires another function to call it.
***** Can it gather from multiple files?
Or is it restricted to only looking at one file at a time?

*** [[https://karl-voit.at/2020/08/14/project-mgt-draft/][Karl Voit's "A Draft Workflow for Advanced Project Management Using Org Mode and Org Edna"]]

Karl appears to create the PlantUML file manually from his org-mode files and then converts that into an image.

**** Things that are missing.

***** There doesn't appear to be any automation for creating the PlantUML file.


*** [[https://www.sachachua.com/sharing/evil-plans.html][Sacha Chua's Evil plans.]]

This uses GraphViz in order to create a diagram of the related tasks and outcomes. 

[[./images/evil_plans2.png][Sacha Chua's Evil plans.]]
**** Things that are missing.
***** It doesn't appear to use org-edna dependency syntax.
This means that you can't make the most of org-edna's functions.
***** It doesn't appear to pull it's tasks from multiple files.

*** Similar in intention to what [[https://github.com/org-roam/org-roam-ui][org-roam-ui]] provides.
Org-roam-ui has a level of polish that isn't necessarily necessary, however it provides a good idea of what can be achieved to visually display relationships between things spread across multiple files.

[[./images/136942774-3f293f65-dbd4-4479-b530-1fde738c5289.png][org-roam-ui example.]]
